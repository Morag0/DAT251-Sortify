name: CI/CD Pipeline
run-name: ${{ github.actor }} is testing
on:
  workflow_dispatch: # Enables running workflow manually
  push:
    branches:
      - main
      - '**'
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Validate Gradle Wrapper
      uses: gradle/wrapper-validation-action@v2

    - name: Grant execute permissions to Gradlew
      run: chmod +x gradlew
      working-directory: backend

    - name: Build JAR with Gradle
      working-directory: backend
      run: ./gradlew bootJar --no-daemon
      
    - name: Verify Docker Compose Version
      run: docker compose version
    
    - name: Build Latest Docker Image
      run: docker compose build --no-cache 

    - name: Start Backend with Docker Compose
      run: docker compose up -d 

    - name: Show Backend Logs
      run: docker logs sortify-backend-container || echo "No logs avaliable"
    
    - name: List all running containers
      run: docker ps -a

    - name: Check Running Processes Inside the Container
      run: docker exec sortify-backend-container ps aux || echo "No processes running"

    - name: Check Open Ports in the Container
      run: docker exec sortify-backend-container netstat -tlnp || echo "No open ports"
    
    - name: Check if the App is Actually Listening on Port 9876
      run: docker exec -it sortify-backend-container netstat -tlnp | grep 9876 || echo "App is not listening on port 9876"

    # - name: Wait for Backend to be Ready
    #   run: |
    #     CONTAINER_ID=$(docker ps -qf "name=sortify-backend-container")
    #     BACKEND_IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $CONTAINER_ID)
    
    #     echo "üîç Checking backend health at http://$BACKEND_IP:9876/actuator/health"
    #     sleep 10
    
    #     for i in {1..30}; do
    #       RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" http://$BACKEND_IP:9876/actuator/health)
          
    #       if [[ "$RESPONSE" == "200" ]]; then
    #         echo "‚úÖ Backend is UP!"
    #         exit 0
    #       fi
          
    #       echo "‚è≥ Waiting for backend ($i/30)... (HTTP Status: $RESPONSE)"
    #       sleep 10
    #     done
        
    #     echo "‚ùå Backend did not start in time" && exit 1

    # - name: Run Tests Locally
    #   run: ./gradlew clean test --no-daemon
    #   working-directory: backend

    - name: Run Tests in Docker
      run: docker run --network="host" -e CI=true sortify-backend ./gradlew clean test
      working-directory: backend

    - name: Upload Test Result
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-result
        path: backend/build/reports/tests/
        if-no-files-found: warn
        retention-days: 7

    - name: generate JaCoCo report
      run: ./gradlew jacocoTestReport --no-daemon
      working-directory: backend

    - name: Upload JaCoCo coverage
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: jacoco-report
        path: backend/build/reports/jacoco/test/html/
        if-no-files-found: warn
        retention-days: 7
    
    - name: Stop Backend
      run: docker compose down  # Stop and remove the container
